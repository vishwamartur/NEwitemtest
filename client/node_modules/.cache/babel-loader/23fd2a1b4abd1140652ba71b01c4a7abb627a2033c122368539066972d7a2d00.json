{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmarturx\\\\OneDrive - Intel Corporation\\\\Desktop\\\\Itemtry\\\\NEwitemtest\\\\client\\\\src\\\\pages\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\n//import { Link } from \"react-router-dom\";\nimport BookCard from \"../components/BookCard\";\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  // Declare a state variable to store the book data\n  const [books, setBooks] = useState([]);\n\n  // Use the useEffect hook to fetch the book data from the backend API\n  useEffect(() => {\n    // Use the fetch API to make a GET request to the /books endpoint\n    fetch(\"/books\").then(response => {\n      // If the request is successful, convert the response to JSON\n      return response.json();\n    }).then(data => {\n      // Update the books state variable with the data\n      setBooks(data);\n    }).catch(error => {\n      // If there is an error, log it to the console\n      console.error(error);\n    });\n  }, []); // Pass an empty array as the second argument to run the effect only once\n\n  // Return a JSX element to display the book list in a grid\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Book List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: books.map(book => /*#__PURE__*/_jsxDEV(Col, {\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(BookCard, {\n            book: book\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 17\n          }, this)\n        }, book.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_s(Home, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","BookCard","Container","Row","Col","useState","useEffect","jsxDEV","_jsxDEV","Home","_s","books","setBooks","fetch","then","response","json","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","book","md","id","_c","$RefreshReg$"],"sources":["C:/Users/vmarturx/OneDrive - Intel Corporation/Desktop/Itemtry/NEwitemtest/client/src/pages/Home.jsx"],"sourcesContent":["import React from \"react\";\r\n//import { Link } from \"react-router-dom\";\r\nimport BookCard from \"../components/BookCard\";\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport { useState, useEffect } from 'react';\r\nfunction Home() {\r\n    // Declare a state variable to store the book data\r\n    const [books, setBooks] = useState([]);\r\n  \r\n    // Use the useEffect hook to fetch the book data from the backend API\r\n    useEffect(() => {\r\n      // Use the fetch API to make a GET request to the /books endpoint\r\n      fetch(\"/books\")\r\n        .then((response) => {\r\n          // If the request is successful, convert the response to JSON\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          // Update the books state variable with the data\r\n          setBooks(data);\r\n        })\r\n        .catch((error) => {\r\n          // If there is an error, log it to the console\r\n          console.error(error);\r\n        });\r\n    }, []); // Pass an empty array as the second argument to run the effect only once\r\n  \r\n    // Return a JSX element to display the book list in a grid\r\n    return (\r\n      <div className=\"Home\">\r\n        <h1>Book List</h1>\r\n        <Container>\r\n          <Row>\r\n            {books.map((book) => (\r\n              <Col md={4} key={book.id}>\r\n                <BookCard book={book} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  export default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,SAAS,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACrD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd;IACAO,KAAK,CAAC,QAAQ,CAAC,CACZC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAL,QAAQ,CAACK,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACEX,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBd,OAAA;MAAAc,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlB,OAAA,CAACN,SAAS;MAAAoB,QAAA,eACRd,OAAA,CAACL,GAAG;QAAAmB,QAAA,EACDX,KAAK,CAACgB,GAAG,CAAEC,IAAI,iBACdpB,OAAA,CAACJ,GAAG;UAACyB,EAAE,EAAE,CAAE;UAAAP,QAAA,eACTd,OAAA,CAACP,QAAQ;YAAC2B,IAAI,EAAEA;UAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC,GADTE,IAAI,CAACE,EAAE;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEnB,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAChB,EAAA,CArCMD,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAsCX,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}