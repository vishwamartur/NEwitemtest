{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmarturx\\\\Videos\\\\int\\\\client\\\\src\\\\pages\\\\Home.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport BookCard from \"../components/BookCard\";\nfunction Home() {\n  // Declare a state variable to store the book data\n  const [books, setBooks] = useState([]);\n\n  // Use the useEffect hook to fetch the book data from the backend API\n  useEffect(() => {\n    // Use the fetch API to make a GET request to the /books endpoint\n    fetch(\"/books\").then(response => {\n      // If the request is successful, convert the response to JSON\n      return response.json();\n    }).then(data => {\n      // Update the books state variable with the data\n      setBooks(data);\n    }).catch(error => {\n      // If there is an error, log it to the console\n      console.error(error);\n    });\n  }, []); // Pass an empty array as the second argument to run the effect only once\n\n  // Return a JSX element to display the book list in a grid\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, \"Book List\"), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, books.map(book => /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    key: book.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(BookCard, {\n    book: book,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }))))));\n}\nexport default Home;","map":{"version":3,"names":["React","Link","BookCard","Home","books","setBooks","useState","useEffect","fetch","then","response","json","data","catch","error","console","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","Container","Row","map","book","Col","md","key","id"],"sources":["C:/Users/vmarturx/Videos/int/client/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BookCard from \"../components/BookCard\";\r\nfunction Home() {\r\n    // Declare a state variable to store the book data\r\n    const [books, setBooks] = useState([]);\r\n  \r\n    // Use the useEffect hook to fetch the book data from the backend API\r\n    useEffect(() => {\r\n      // Use the fetch API to make a GET request to the /books endpoint\r\n      fetch(\"/books\")\r\n        .then((response) => {\r\n          // If the request is successful, convert the response to JSON\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          // Update the books state variable with the data\r\n          setBooks(data);\r\n        })\r\n        .catch((error) => {\r\n          // If there is an error, log it to the console\r\n          console.error(error);\r\n        });\r\n    }, []); // Pass an empty array as the second argument to run the effect only once\r\n  \r\n    // Return a JSX element to display the book list in a grid\r\n    return (\r\n      <div className=\"Home\">\r\n        <h1>Book List</h1>\r\n        <Container>\r\n          <Row>\r\n            {books.map((book) => (\r\n              <Col md={4} key={book.id}>\r\n                <BookCard book={book} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n  export default Home;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,IAAIA,CAAA,EAAG;EACZ;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAAC,QAAQ,CAAC,CACZC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDF,IAAI,CAAEG,IAAI,IAAK;MACd;MACAP,QAAQ,CAACO,IAAI,CAAC;IAChB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChB;MACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,oBACEd,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnBvB,KAAA,CAAAgB,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,WAAa,CAAC,eAClBvB,KAAA,CAAAgB,aAAA,CAACQ,SAAS;IAAAN,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACRvB,KAAA,CAAAgB,aAAA,CAACS,GAAG;IAAAP,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACDnB,KAAK,CAACsB,GAAG,CAAEC,IAAI,iBACd3B,KAAA,CAAAgB,aAAA,CAACY,GAAG;IAACC,EAAE,EAAE,CAAE;IAACC,GAAG,EAAEH,IAAI,CAACI,EAAG;IAAAb,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvBvB,KAAA,CAAAgB,aAAA,CAACd,QAAQ;IAACyB,IAAI,EAAEA,IAAK;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CACpB,CACN,CACE,CACI,CACR,CAAC;AAEV;AACA,eAAepB,IAAI"},"metadata":{},"sourceType":"module"}