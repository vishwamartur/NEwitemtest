{"ast":null,"code":"// Import local storage\nimport localStorageService from './local-storage.service';\n\n// Get the access token from the local storage\nconst token = localStorageService.getAccessToken();\n\n// If the status is 401, the token is expired or invalid\nif (status === 401) {\n  // Remove the token from the local storage\n  localStorageService.removeToken();\n}\n\n// Set the token in the local storage\nlocalStorageService.setToken(accessToken);\n\n// Remove the token from the local storage\nlocalStorageService.removeToken();","map":{"version":3,"names":["localStorageService","token","getAccessToken","status","removeToken","setToken","accessToken"],"sources":["C:/Users/vmarturx/Videos/int/client/src/services/local-storage.service.js"],"sourcesContent":["// Import local storage\r\nimport localStorageService from './local-storage.service';\r\n\r\n// Get the access token from the local storage\r\nconst token = localStorageService.getAccessToken();\r\n\r\n// If the status is 401, the token is expired or invalid\r\nif (status === 401) {\r\n  // Remove the token from the local storage\r\n  localStorageService.removeToken();\r\n}\r\n\r\n// Set the token in the local storage\r\nlocalStorageService.setToken(accessToken);\r\n\r\n// Remove the token from the local storage\r\nlocalStorageService.removeToken();\r\n\r\n  "],"mappings":"AAAA;AACA,OAAOA,mBAAmB,MAAM,yBAAyB;;AAEzD;AACA,MAAMC,KAAK,GAAGD,mBAAmB,CAACE,cAAc,CAAC,CAAC;;AAElD;AACA,IAAIC,MAAM,KAAK,GAAG,EAAE;EAClB;EACAH,mBAAmB,CAACI,WAAW,CAAC,CAAC;AACnC;;AAEA;AACAJ,mBAAmB,CAACK,QAAQ,CAACC,WAAW,CAAC;;AAEzC;AACAN,mBAAmB,CAACI,WAAW,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}